{"version":3,"sources":["store/actions.js","store/index.js","store/RestaurantCard/RestaurantCard.js","store/RestaurantsListPage/RestaurantsListPage.js","store/selectors.js","store/RestaurantsListPage/index.js","App.js","index.js"],"names":["ACTION_TYPES","SAVE_RESTAURANTS","composeEnchancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middlewares","thunk","initialState","restaurantsListData","store","createStore","state","arguments","length","undefined","action","type","payload","Object","objectSpread2","applyMiddleware","apply","RestaurantCard","props","imageUrl","title","categories","etaRange","react_default","a","createElement","className","src","alt","join","defaultProps","RestaurantsListPage","_ref","loadRestaurants","useEffect","map","restaurant","uuid","heroImageUrl","store_RestaurantCard_RestaurantCard","key","text","selectRestaurantsList","createSelector","feedItems","storesMap","_ref2","mapDispatch2Props","dispatch","fetch","then","res","json","data","saveRestaurants","Enchanced","connect","App","es","ReactDOM","render","src_App","document","getElementById"],"mappings":"sMAAaA,EAAe,CAC1BC,iBAAkB,oBCGdC,EAAoBC,OAAOC,sCAC5BC,IACCC,EAAc,CAACC,KAEfC,EAAe,CACnBC,oBAAqB,MAmBvB,IAKeC,EALDC,YAhBd,WAA+C,IAA9BC,EAA8BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBL,EAAcQ,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC7C,OAAQC,EAAOC,MACb,KAAKjB,EAAaC,iBAAkB,IAC1BiB,EAAYF,EAAZE,QAER,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACFP,EADL,CAEEH,oBAAqBS,IAIzB,QACE,OAAON,IAMXV,EAAkBmB,IAAeC,WAAf,EAAmBhB,KC3BjCiB,EAAiB,SAACC,GAAU,IAE9BC,EAIED,EAJFC,SACAC,EAGEF,EAHFE,MACAC,EAEEH,EAFFG,WACAC,EACEJ,EADFI,SAGF,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKE,IAAKR,EAAUS,IAAKR,EAAOM,UAAU,yBAC1CH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,0BAA0BN,GACxCG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+BACZL,EAAWQ,KAAK,aAEnBN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBAAwBJ,KAY7CL,EAAea,aAAe,CAC5BT,WAAY,GACZC,SAAU,IAGGL,QC/BTc,EAAsB,SAAAC,GAA8C,IAA3C7B,EAA2C6B,EAA3C7B,oBAAqB8B,EAAsBD,EAAtBC,gBAKlD,OAJAC,oBAAU,WACRD,KACC,IAGDV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACZvB,EAAoBgC,IAAI,SAACC,GAAe,IAErCC,EAKED,EALFC,KACAjB,EAIEgB,EAJFhB,MACAkB,EAGEF,EAHFE,aACAjB,EAEEe,EAFFf,WACAC,EACEc,EADFd,SAGF,OACEC,EAAAC,EAAAC,cAACc,EAAD,CACEC,IAAKH,EACLjB,MAAOA,EACPiB,KAAMA,EACNlB,SAAUmB,EACVjB,WAAYA,EACZC,SAAUA,EAASmB,WAa/BV,EAAoBD,aAAe,CACjC3B,oBAAqB,IAGR4B,gBCxCFW,EAAwBC,YAFhB,SAAArC,GAAK,OAAIA,GAI5B,SAAA0B,GAA6B,IAA1B7B,EAA0B6B,EAA1B7B,oBACD,IAAKA,EACH,MAAO,GAFkB,IAKnByC,EAAyBzC,EAAzByC,UAAWC,EAAc1C,EAAd0C,UAEnB,OAAOD,EAAUT,IAAI,SAAAW,GAAA,IAAGT,EAAHS,EAAGT,KAAH,OAAcQ,EAAUR,OCFjD,IAAMU,EAAoB,CACxBd,gBLH6B,kBAAM,SAACe,GACpCC,MAAM,+DACHC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAlB,GAAc,IAAXqB,EAAWrB,EAAXqB,KACPL,EATkB,SAAAK,GAAI,MAAK,CAC/B1C,KAAMjB,EAAaC,iBACnBiB,QAASyC,GAOIC,CAAgBD,SKElBE,EAAYC,YAVzB,SAAwBlD,GACtB,MAAO,CACLH,oBAAqBuC,EAAsBpC,KAU7CyC,EAFuBS,CAGvBzB,GCJa0B,EARH,kBACVlC,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAUtD,MAAOA,GACfmB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAC8B,EAAD,SCLNI,IAASC,OAAOrC,EAAAC,EAAAC,cAACoC,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.1c507bce.chunk.js","sourcesContent":["export const ACTION_TYPES = {\n  SAVE_RESTAURANTS: 'SAVE_RESTAURANTS',\n};\n\nconst saveRestaurants = data => ({\n  type: ACTION_TYPES.SAVE_RESTAURANTS,\n  payload: data,\n});\n\nexport const loadRestaurants = () => (dispatch) => {\n  fetch('https://mate-uber-eats-api.herokuapp.com/api/v1/restaurants')\n    .then(res => res.json())\n    .then(({ data }) => {\n      dispatch(saveRestaurants(data));\n    });\n};\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { ACTION_TYPES } from './actions';\n\nconst composeEnchancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n  || compose;\nconst middlewares = [thunk];\n\nconst initialState = {\n  restaurantsListData: null,\n};\n\nfunction reducer(state = initialState, action) {\n  switch (action.type) {\n    case ACTION_TYPES.SAVE_RESTAURANTS: {\n      const { payload } = action;\n\n      return {\n        ...state,\n        restaurantsListData: payload,\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n\nconst store = createStore(\n  reducer,\n  composeEnchancers(applyMiddleware(...middlewares))\n);\n\nexport default store;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst RestaurantCard = (props) => {\n  const {\n    imageUrl,\n    title,\n    categories,\n    etaRange,\n  } = props;\n\n  return (\n    <div className=\"restaurant-card\">\n      <img src={imageUrl} alt={title} className=\"restaurant-card__img\" />\n      <h2 className=\"restaurant-card__title\">{title}</h2>\n      <div className=\"restaurant-card__categories\">\n        {categories.join(' â€¢ ')}\n      </div>\n      <div className=\"restaurant-card__eta\">{etaRange}</div>\n    </div>\n  );\n};\n\nRestaurantCard.propTypes = {\n  imageUrl: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  categories: PropTypes.arrayOf(PropTypes.string),\n  etaRange: PropTypes.string,\n};\n\nRestaurantCard.defaultProps = {\n  categories: [],\n  etaRange: '',\n};\n\nexport default RestaurantCard;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport RestaurantCard from '../RestaurantCard/RestaurantCard';\n\nconst RestaurantsListPage = ({ restaurantsListData, loadRestaurants }) => {\n  useEffect(() => {\n    loadRestaurants();\n  }, []);\n\n  return (\n    <div className=\"restaurant-list\">\n      {restaurantsListData.map((restaurant) => {\n        const {\n          uuid,\n          title,\n          heroImageUrl,\n          categories,\n          etaRange,\n        } = restaurant;\n\n        return (\n          <RestaurantCard\n            key={uuid}\n            title={title}\n            uuid={uuid}\n            imageUrl={heroImageUrl}\n            categories={categories}\n            etaRange={etaRange.text}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nRestaurantsListPage.propTypes = {\n  restaurantsListData: PropTypes.arrayOf(PropTypes.object),\n  loadRestaurants: PropTypes.func.isRequired,\n};\n\nRestaurantsListPage.defaultProps = {\n  restaurantsListData: [],\n};\n\nexport default RestaurantsListPage;\n","import { createSelector } from 'reselect';\n\nconst rootSelector = state => state;\n\nexport const selectRestaurantsList = createSelector(\n  rootSelector,\n  ({ restaurantsListData }) => {\n    if (!restaurantsListData) {\n      return [];\n    }\n\n    const { feedItems, storesMap } = restaurantsListData;\n\n    return feedItems.map(({ uuid }) => storesMap[uuid]);\n  },\n);\n","import { connect } from 'react-redux';\nimport RestaurantsListPage from './RestaurantsListPage';\nimport { loadRestaurants } from '../actions';\nimport { selectRestaurantsList } from '../selectors';\n\nfunction mapState2Props(state) {\n  return {\n    restaurantsListData: selectRestaurantsList(state),\n  };\n}\n\nconst mapDispatch2Props = {\n  loadRestaurants,\n};\n\nexport const Enchanced = connect(\n  mapState2Props,\n  mapDispatch2Props\n)(RestaurantsListPage);\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport store from './store/index';\nimport { Enchanced as RestaurantsListPage }\n  from './store/RestaurantsListPage/index';\n\nconst App = () => (\n  <Provider store={store}>\n    <div className=\"page\">\n      <RestaurantsListPage />\n    </div>\n  </Provider>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}